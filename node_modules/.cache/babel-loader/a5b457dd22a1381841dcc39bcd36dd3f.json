{"ast":null,"code":"import _classCallCheck from \"C:\\\\theripy-appoinment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\theripy-appoinment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\theripy-appoinment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\theripy-appoinment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\theripy-appoinment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\theripy-appoinment\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nvar loginStyles = {\n  width: \"90%\",\n  maxWidth: \"600px\",\n  margin: \"20px auto\",\n  border: \"1px solid #ddd\",\n  borderRadius: \"5px\",\n  padding: \"10px\"\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      fields: {},\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var fields = this.state.fields;\n      var errors = {};\n      var formIsValid = true; //Name\n\n      if (!fields[\"name\"]) {\n        formIsValid = false;\n        errors[\"name\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"name\"] !== \"undefined\") {\n        if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n          formIsValid = false;\n          errors[\"name\"] = \"Only letters\";\n        }\n      } //Email\n\n\n      if (!fields[\"email\"]) {\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"email\"] !== \"undefined\") {\n        var lastAtPos = fields[\"email\"].lastIndexOf('@');\n        var lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n          formIsValid = false;\n          errors[\"email\"] = \"Email is not valid\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"contactSubmit\",\n    value: function contactSubmit(e) {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        alert(\"Form submitted\");\n      } else {\n        alert(\"Form has errors.\");\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(field, e) {\n      var fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({\n        fields: fields\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        name: \"contactform\",\n        className: \"contactform\",\n        onSubmit: this.contactSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: \"name\",\n        type: \"text\",\n        size: \"30\",\n        placeholder: \"Name\",\n        onChange: this.handleChange.bind(this, \"name\"),\n        value: this.state.fields[\"name\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.errors[\"name\"]), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        refs: \"email\",\n        type: \"text\",\n        size: \"30\",\n        placeholder: \"Email\",\n        onChange: this.handleChange.bind(this, \"email\"),\n        value: this.state.fields[\"email\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.errors[\"email\"]), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        refs: \"phone\",\n        type: \"text\",\n        size: \"30\",\n        placeholder: \"Phone\",\n        onChange: this.handleChange.bind(this, \"phone\"),\n        value: this.state.fields[\"phone\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        refs: \"address\",\n        type: \"text\",\n        size: \"30\",\n        placeholder: \"Address\",\n        onChange: this.handleChange.bind(this, \"address\"),\n        value: this.state.fields[\"address\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nReact.render(React.createElement(Login, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}), document.getElementById('container'));\nexport default Login;","map":{"version":3,"sources":["C:\\theripy-appoinment\\src\\components\\Login.js"],"names":["React","Component","Nav","Navbar","NavbarBrand","NavbarToggler","Collapse","NavItem","Jumbotron","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","Label","loginStyles","width","maxWidth","margin","border","borderRadius","padding","Login","props","state","fields","errors","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","setState","e","preventDefault","handleValidation","alert","field","target","value","contactSubmit","bind","handleChange","color","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\n    const loginStyles = {\r\n        width: \"90%\",\r\n        maxWidth: \"600px\",\r\n        margin: \"20px auto\",\r\n        border: \"1px solid #ddd\",\r\n        borderRadius: \"5px\",\r\n        padding: \"10px\"\r\n      }\r\n      \r\n      class Login extends React.Component {\r\n        constructor(props){\r\n           super(props);\r\n    \r\n           this.state = {\r\n               fields: {},\r\n               errors: {}\r\n           }\r\n        }\r\n    \r\n        handleValidation(){\r\n            let fields = this.state.fields;\r\n            let errors = {};\r\n            let formIsValid = true;\r\n    \r\n            //Name\r\n            if(!fields[\"name\"]){\r\n               formIsValid = false;\r\n               errors[\"name\"] = \"Cannot be empty\";\r\n            }\r\n    \r\n            if(typeof fields[\"name\"] !== \"undefined\"){\r\n               if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n                  formIsValid = false;\r\n                  errors[\"name\"] = \"Only letters\";\r\n               }        \r\n            }\r\n    \r\n            //Email\r\n            if(!fields[\"email\"]){\r\n               formIsValid = false;\r\n               errors[\"email\"] = \"Cannot be empty\";\r\n            }\r\n    \r\n            if(typeof fields[\"email\"] !== \"undefined\"){\r\n               let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n               let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n    \r\n               if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n                  formIsValid = false;\r\n                  errors[\"email\"] = \"Email is not valid\";\r\n                }\r\n           }  \r\n    \r\n           this.setState({errors: errors});\r\n           return formIsValid;\r\n       }\r\n    \r\n       contactSubmit(e){\r\n            e.preventDefault();\r\n    \r\n            if(this.handleValidation()){\r\n               alert(\"Form submitted\");\r\n            }else{\r\n               alert(\"Form has errors.\")\r\n            }\r\n    \r\n        }\r\n    \r\n        handleChange(field, e){         \r\n            let fields = this.state.fields;\r\n            fields[field] = e.target.value;        \r\n            this.setState({fields});\r\n        }\r\n    \r\n        render(){\r\n            return (\r\n                <div>           \r\n                   <form name=\"contactform\" className=\"contactform\" onSubmit= {this.contactSubmit.bind(this)}>\r\n                        <div className=\"col-md-6\">\r\n                          <fieldset>\r\n                               <input ref=\"name\" type=\"text\" size=\"30\" placeholder=\"Name\" onChange={this.handleChange.bind(this, \"name\")} value={this.state.fields[\"name\"]}/>\r\n                               <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\r\n                              <br/>\r\n                             <input refs=\"email\" type=\"text\" size=\"30\" placeholder=\"Email\" onChange={this.handleChange.bind(this, \"email\")} value={this.state.fields[\"email\"]}/>\r\n                             <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\r\n                             <br/>\r\n                             <input refs=\"phone\" type=\"text\" size=\"30\" placeholder=\"Phone\" onChange={this.handleChange.bind(this, \"phone\")} value={this.state.fields[\"phone\"]}/>\r\n                             <br/>\r\n                             <input refs=\"address\" type=\"text\" size=\"30\" placeholder=\"Address\" onChange={this.handleChange.bind(this, \"address\")} value={this.state.fields[\"address\"]}/>\r\n                             <br/>\r\n                         </fieldset>\r\n                      </div>\r\n    \r\n                  </form>\r\n                </div>\r\n          )\r\n        }\r\n    }\r\n    \r\n React.render(<Login />, document.getElementById('container'));\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}